From 9d70957165a2c95d8db492ad3f4e09c11473c41a Mon Sep 17 00:00:00 2001
From: wj <545818496@qq.com>
Date: Wed, 8 May 2024 13:58:00 +0800
Subject: [PATCH] add support st7702 mipi panel 640x480

---
 .../sunxi/disp2/disp/lcd/default_panel.c      | 141 ++++++++++++++----
 1 file changed, 109 insertions(+), 32 deletions(-)

diff --git a/drivers/video/fbdev/sunxi/disp2/disp/lcd/default_panel.c b/drivers/video/fbdev/sunxi/disp2/disp/lcd/default_panel.c
index 4b2dfcee8..4d17342b4 100644
--- a/drivers/video/fbdev/sunxi/disp2/disp/lcd/default_panel.c
+++ b/drivers/video/fbdev/sunxi/disp2/disp/lcd/default_panel.c
@@ -17,6 +17,7 @@ static void LCD_bl_close(u32 sel);
 
 static void LCD_panel_init(u32 sel);
 static void LCD_panel_exit(u32 sel);
+#define panel_reset(sel, val) sunxi_lcd_gpio_set_value(sel, 0, val)
 
 static void LCD_cfg_panel_info(struct panel_extend_para *info)
 {
@@ -82,15 +83,10 @@ static void LCD_cfg_panel_info(struct panel_extend_para *info)
 
 static s32 LCD_open_flow(u32 sel)
 {
-	/* open lcd power, and delay 50ms */
-	LCD_OPEN_FUNC(sel, LCD_power_on, 30);
-	/* open lcd power, than delay 200ms */
-	LCD_OPEN_FUNC(sel, LCD_panel_init, 50);
-	/* open lcd controller, and delay 100ms */
-	LCD_OPEN_FUNC(sel, sunxi_lcd_tcon_enable, 100);
-	/* open lcd backlight, and delay 0ms */
-	LCD_OPEN_FUNC(sel, LCD_bl_open, 0);
-
+	LCD_OPEN_FUNC(sel, LCD_power_on, 30);   //open lcd power, and delay 50ms
+	LCD_OPEN_FUNC(sel, LCD_panel_init, 50);   //open lcd power, than delay 200ms
+	LCD_OPEN_FUNC(sel, sunxi_lcd_tcon_enable, 100);     //open lcd controller, and delay 100ms
+	LCD_OPEN_FUNC(sel, LCD_bl_open, 0);     //open lcd backlight, and delay 0ms
 	return 0;
 }
 
@@ -104,40 +100,27 @@ static s32 LCD_close_flow(u32 sel)
 	LCD_CLOSE_FUNC(sel, LCD_panel_exit, 200);
 	/* close lcd power, and delay 500ms */
 	LCD_CLOSE_FUNC(sel, LCD_power_off, 500);
-
 	return 0;
 }
 
 static void LCD_power_on(u32 sel)
 {
-	/* config lcd_power pin to open lcd power0 */
 	sunxi_lcd_power_enable(sel, 0);
+	sunxi_lcd_delay_ms(10);
+	sunxi_lcd_power_enable(sel, 1);
+	sunxi_lcd_delay_ms(10);
 	sunxi_lcd_pin_cfg(sel, 1);
-
-/*#if defined(CONFIG_FPGA_V7_PLATFORM) || defined(CONFIG_FPGA_V4_PLATFORM)*/
-	/*struct disp_panel_para *panel_info =*/
-	    /*kmalloc(sizeof(struct disp_panel_para), GFP_KERNEL | __GFP_ZERO);*/
-
-	/*bsp_disp_get_panel_info(sel, panel_info);*/
-	/*if (panel_info->lcd_if == LCD_IF_HV) {*/
-		/*writel(0x22222222, ioremap(0x0300b06c, 4));*/
-		/*writel(0x22222222, ioremap(0x0300b070, 4));*/
-		/*writel(0x22222222, ioremap(0x0300b074, 4));*/
-		/*writel(0x22222222, ioremap(0x0300b078, 4));*/
-	/*} else if(panel_info->lcd_if == LCD_IF_LVDS) {*/
-		/*writel(0x33333333, ioremap(0x0300b06c, 4));*/
-		/*writel(0x33333333, ioremap(0x0300b070, 4));*/
-		/*writel(0x33333333, ioremap(0x0300b074, 4));*/
-		/*writel(0x33333333, ioremap(0x0300b078, 4));*/
-	/*}*/
-	/*kfree(panel_info);*/
-/*#endif*/
+	sunxi_lcd_delay_ms(50);
 }
 
 static void LCD_power_off(u32 sel)
 {
 	sunxi_lcd_pin_cfg(sel, 0);
-	/* config lcd_power pin to close lcd power0 */
+	sunxi_lcd_delay_ms(20);
+	panel_reset(sel, 0);
+	sunxi_lcd_delay_ms(5);
+	sunxi_lcd_power_disable(sel, 1);
+	sunxi_lcd_delay_ms(5);
 	sunxi_lcd_power_disable(sel, 0);
 }
 
@@ -149,17 +132,111 @@ static void LCD_bl_open(u32 sel)
 
 static void LCD_bl_close(u32 sel)
 {
-	/* config lcd_bl_en pin to close lcd backlight */
 	sunxi_lcd_backlight_disable(sel);
 	sunxi_lcd_pwm_disable(sel);
 }
 
+
+#define REGFLAG_DELAY         0XFE
+#define REGFLAG_END_OF_TABLE  0xFC   /* END OF REGISTERS MARKER */
+
+struct LCM_setting_table {
+	u8 cmd;
+	u32 count;
+	u8 para_list[100];
+};
+
+static struct LCM_setting_table lcm_d300t9307v0_setting[] = {
+    // {0xB9, 3,  {0xF1, 0x12, 0x83}},
+	// {0xBA, 27, {0x33,0x81,0x05,0xF9,0x0E,0x0E,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x44,0x25,0x00,0x91,0x0A,0x00,0x00,0x02,0x4F,0xD1,0x00,0x00,0x37}},
+	// {0xB8, 1,  {0x76}},
+	// {0xBF, 3,  {0x02,0x11,0x00}},
+	// {0xB3, 10, {0x0C,0x10,0x0A,0x50,0x03,0xFF,0x00,0x00,0x00,0x00}},
+	// {0xC0, 9,  {0x73,0x73,0x50,0x50,0x00,0x00,0x08,0x70,0x00}},
+	// {0xBC, 1,  {0x46}},
+	// {0xCC, 1,  {0x0B}},
+	// {0xCC, 1,  {0x80}},
+	// {0xB2, 3,  {0x00,0x13,0xF0}},
+	// {0xE3, 14, {0x07,0x07,0x0B,0x0B,0x03,0x0B,0x00,0x00,0x00,0x00,0xFF,0x00,0xC0,0x10}},
+	// {0xC1, 12, {0x53,0x00,0x1E,0x1E,0x77,0xE1,0xCC,0xD,0x67,0x77,0x33,0x33}},
+	// {0xB5, 2,  {0x10,0x10}},
+	// {0xB6, 2,  {0x6C,0x7C}},
+	// {0xE9, 63, {0x08,0x00,0x0E,0x00,0x00,0xB0,0xB1,0x11,0x31,0x23,0x28,0x10,0xB0,0xB1,0x27,0x08,0x00,0x04,0x02,0x00,0x00,0x00,0x00,0x04,0x02,0x00,0x00,0x00,0x88,0x88,0xBA,0x60,0x24,0x08,0x88,0x88,0x88,0x88,0x88,0x88,0x88,0xBA,0x71,0x35,0x18,0x88,0x88,0x88,0x88,0x88,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
+	// {0xEA, 61, {0x97,0x0A,0x82,0x02,0x13,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x88,0xBA,0x17,0x53,0x88,0x88,0x88,0x88,0x88,0x88,0x81,0x88,0xBA,0x06,0x42,0x88,0x88,0x88,0x88,0x88,0x88,0x23,0x10,0x00,0x02,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
+	// {0xE0, 34, {0x00,0x07,0x0B,0x27,0x2D,0x3F,0x3B,0x37,0x05,0x0A,0x0B,0x0F,0x11,0x0F,0x12,0x12,0x18,0x00,0x07,0x0B,0x27,0x2D,0x3F,0x3B,0x37,0x05,0x0A,0x0B,0x0F,0x11,0x0F,0x12,0x12,0x18}},
+	// {0x11 ,0, {}},
+	// {REGFLAG_DELAY, REGFLAG_DELAY, {150} },
+	// {0x29 ,0, {}},
+	// {REGFLAG_DELAY, REGFLAG_DELAY, {50} },
+	// {REGFLAG_END_OF_TABLE, REGFLAG_END_OF_TABLE, {} }
+
+    {0xB9, 3,  {0xF1, 0x12, 0x83}},
+	{0xB1, 5,  {0x00,0x00,0x00,0xDA,0x80}},
+	{0xB2, 3,  {0x00, 0x13, 0x70}},
+	{0xB3, 10, {0x10,0x10,0x28,0x28,0x03,0xFF,0x00,0x00,0x00,0x00}},
+	{0xB4, 1,  {0x80}},
+	{0xB5, 2,  {0x0A,0x0A}},
+	{0xB6, 2,  {0x87,0x87}},
+	{0xB8, 4,  {0x26,0x22,0xF0,0x63}},
+	{0xBA, 27, {0x33,0x81,0x05,0xF9,0x0E,0x0E,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x44,0x25,0x00,0x90,0x0A,0x00,0x00,0x01,0x4F,0x01,0x00,0x00,0x37}},
+	{0xBC, 1,  {0x47}},
+	{0xBF, 3,  {0x02,0x11,0x00}},
+	{0xC0, 9,  {0x73,0x73,0x50,0x50,0x00,0x00,0x12,0x50,0x00}},
+	{0xC1, 12, {0x53,0xC0,0x32,0x32,0x77,0xE1,0xD,0xD,0x77,0x77,0x33,0x33}},
+	{0xC6, 6,  {0x82,0x00,0xBF,0xFF,0x00,0xFF}},
+	{0xC7, 6,  {0xB8,0x00,0x0A,0x00,0x00,0x00}},
+	{0xC8, 4,  {0x10,0x40,0x1E,0x02}},
+	{0xCC, 1,  {0x0B}},
+	{0xE0, 34, {0x00,0x06,0x0A,0x2A,0x3D,0x3F,0x3B,0x37,0x06,0x0B,0x0C,0x10,0x11,0x10,0x13,0x12,0x18,0x00,0x06,0x0A,0x2A,0x3D,0x3F,0x3B,0x37,0x06,0x0B,0x0C,0x10,0x11,0x10,0x13,0x12,0x18}},
+	{0xE3, 14, {0x07,0x07,0x0B,0x0B,0x0B,0x0B,0x00,0x00,0x00,0x00,0xFF,0x00,0xC0,0x10}},
+	{0xE9, 63, {0xC8,0x10,0x02,0x00,0x00,0xB0,0xB1,0x11,0x31,0x23,0x28,0x80,0xB0,0xB1,0x27,0x08,0x00,0x04,0x02,0x00,0x00,0x00,0x00,0x04,0x02,0x00,0x00,0x00,0x88,0x88,0xBA,0x60,0x24,0x08,0x88,0x88,0x88,0x88,0x88,0x88,0x88,0xBA,0x71,0x35,0x18,0x88,0x88,0x88,0x88,0x88,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
+	{0xEA, 61, {0x97,0x0A,0x82,0x02,0x03,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x81,0x88,0xBA,0x17,0x53,0x88,0x88,0x88,0x88,0x88,0x88,0x80,0x88,0xBA,0x06,0x42,0x88,0x88,0x88,0x88,0x88,0x88,0x23,0x00,0x00,0x01,0xA4,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
+	{0xEF, 3,  {0xFF,0xFF,0x01}},
+	{0x11 ,0, {}},
+	{REGFLAG_DELAY, REGFLAG_DELAY, {150} },
+	{0x29 ,0, {}},
+	{REGFLAG_DELAY, REGFLAG_DELAY, {50} },
+	{REGFLAG_END_OF_TABLE, REGFLAG_END_OF_TABLE, {} }	
+};
+
 static void LCD_panel_init(u32 sel)
 {
+	u32 i;
+	printk("st7703 reset\n");
+	panel_reset(sel, 1);
+	sunxi_lcd_delay_ms(1);
+	panel_reset(sel, 0);
+	sunxi_lcd_delay_ms(10);
+	panel_reset(sel, 1);
+	sunxi_lcd_delay_ms(150);
+	printk("st7703 reset finish\n");
+
+	sunxi_lcd_dsi_clk_enable(sel);
+	sunxi_lcd_delay_ms(10);
+	printk("st7703 init\n");
+	
+	for (i = 0;; i++) 
+	{
+		if (lcm_d300t9307v0_setting[i].cmd == REGFLAG_END_OF_TABLE)
+			break;
+		else if (lcm_d300t9307v0_setting[i].cmd == REGFLAG_DELAY)
+			sunxi_lcd_delay_ms(lcm_d300t9307v0_setting[i].para_list[0]);
+		else 
+		{
+			dsi_dcs_wr(sel, lcm_d300t9307v0_setting[i].cmd,
+							lcm_d300t9307v0_setting[i].para_list,
+							lcm_d300t9307v0_setting[i].count);
+		}
+	}
+	printk("st7703 init finish\n");		
 }
 
 static void LCD_panel_exit(u32 sel)
 {
+	sunxi_lcd_dsi_dcs_write_0para(sel, 0x10);
+	sunxi_lcd_delay_ms(80);
+	sunxi_lcd_dsi_dcs_write_0para(sel, 0x28);
+	sunxi_lcd_delay_ms(50);
 }
 
 /* sel: 0:lcd0; 1:lcd1 */
-- 
2.25.1

